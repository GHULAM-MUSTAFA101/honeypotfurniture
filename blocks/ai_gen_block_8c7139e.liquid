{% doc %}
  @prompt
    Section 4: FAQs with Accordion Create a FAQ section with three questions displayed using an accordion-style layout. Each question should be clickable to reveal the answer. This section should be clean, responsive, and styled consistently with the rest of the page. Include a link to Tabby's help center at the bottom. üîπ Structure: Section Title: Frequently Asked Questions Accordion block for each of the 3 FAQs below: FAQ 1: Question: ‚ÄúWho can use Tabby?‚Äù Answer: ‚ÄúTo be eligible to use Tabby, you must: Be at least 18 years of age Be a UAE resident Have a valid National ID Link a valid debit or credit card to cover Tabby payments Have a good credit history‚Äù FAQ 2: Question: ‚ÄúHow much can I spend with Tabby?‚Äù Answer: ‚ÄúYour spending limit is determined by: Your payment history with Tabby Your remaining balance and unpaid Tabby orders The total purchase amount in your basket Other internal approval factors‚Äù FAQ 3: Question: ‚ÄúIs Tabby free to use?‚Äù Answer: ‚ÄúYes! When you split purchases into 4 payments, there are no fees or interest if payments are made on time. For longer-term plans, a service fee may apply.‚Äù üîó Help Center Link (below accordion): Text: Visit Tabby‚Äôs help center to find out more. Link: https://support.tabby.ai/l/en Styling: Underlined, center-aligned, brand-colored üß© Optional Settings: accordion_border_style: (none / thin line / shadow) accordion_icon: (plus/minus or caret toggle) title_font_size: (range: 18‚Äì32px) section_padding_top: (0‚Äì100px) section_padding_bottom: (0‚Äì100px) link_alignment: (left / center / right) üé® Styling Notes: Keep it minimal, clean, and aligned with the page theme Ensure smooth accordion transitions and accessibility (keyboard/touch friendly) Responsive on all devices: accordions collapse nicely on mobile - making sure the accordian works and expands or collapses on click

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-faq-accordion-{{ ai_gen_id }} {
    padding-top: {{ block.settings.section_padding_top }}px;
    padding-bottom: {{ block.settings.section_padding_bottom }}px;
    width: 100%;}

  .ai-faq-title-{{ ai_gen_id }} {
    text-align: center;
    margin-bottom: 30px;
    font-size: {{ block.settings.title_font_size }}px;
  }

  .ai-faq-item-{{ ai_gen_id }} {
    margin-bottom: 15px;
    overflow: hidden;
    {% if block.settings.accordion_border_style == 'thin_line' %}
      border: 1px solid rgba(0, 0, 0, 0.1);
    {% elsif block.settings.accordion_border_style == 'shadow' %}
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    {% endif %}
    border-radius: 8px;
  }

  .ai-faq-question-{{ ai_gen_id }} {
    position: relative;
    padding: 20px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: {{ block.settings.question_background_color }};
    color: {{ block.settings.question_text_color }};
    font-weight: 600;
  }

  .ai-faq-icon-{{ ai_gen_id }} {
    width: 20px;
    height: 20px;
    position: relative;
    transition: transform 0.3s ease;
  }

  .ai-faq-icon-{{ ai_gen_id }}::before,
  .ai-faq-icon-{{ ai_gen_id }}::after {
    content: '';
    position: absolute;
    background-color: currentColor;
  }

  {% if block.settings.accordion_icon == 'plus_minus' %}
    .ai-faq-icon-{{ ai_gen_id }}::before {
      top: 50%;
      left: 0;
      width: 100%;
      height: 2px;
      transform: translateY(-50%);
    }

    .ai-faq-icon-{{ ai_gen_id }}::after {
      top: 0;
      left: 50%;
      width: 2px;
      height: 100%;
      transform: translateX(-50%);
      transition: transform 0.3s ease;
    }

    .ai-faq-item-{{ ai_gen_id }}.active .ai-faq-icon-{{ ai_gen_id }}::after {
      transform: translateX(-50%) scaleY(0);
    }
  {% else %}
    .ai-faq-icon-{{ ai_gen_id }}::before {
      top: 50%;
      left: 0;
      width: 10px;
      height: 2px;
      transform: translateY(-50%) rotate(45deg);
      transform-origin: left center;
    }

    .ai-faq-icon-{{ ai_gen_id }}::after {
      top: 50%;
      left: 8px;
      width: 10px;
      height: 2px;
      transform: translateY(-50%) rotate(-45deg);
      transform-origin: right center;
    }

    .ai-faq-item-{{ ai_gen_id }}.active .ai-faq-icon-{{ ai_gen_id }} {
      transform: rotate(180deg);
    }
  {% endif %}

  .ai-faq-answer-{{ ai_gen_id }} {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, padding 0.3s ease;
    padding: 0 20px;
    background-color: {{ block.settings.answer_background_color }};
    color: {{ block.settings.answer_text_color }};
  }

  .ai-faq-item-{{ ai_gen_id }}.active .ai-faq-answer-{{ ai_gen_id }} {
    max-height: 1000px;
    padding: 20px;
  }

  .ai-faq-help-link-{{ ai_gen_id }} {
    margin-top: 30px;
    text-align: {{ block.settings.link_alignment }};}

  .ai-faq-help-link-{{ ai_gen_id }} a {
    color: {{ block.settings.link_color }};
    text-decoration: underline;
    font-weight: 500;
  }

  @media screen and (max-width: 767px) {
    .ai-faq-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_font_size | minus: 4 }}px;
    }
    
    .ai-faq-question-{{ ai_gen_id }} {
      padding: 15px;
    }
    
    .ai-faq-item-{{ ai_gen_id }}.active .ai-faq-answer-{{ ai_gen_id }} {
      padding: 15px;
    }
  }
{% endstyle %}

<div class="ai-faq-accordion-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <h2 class="ai-faq-title-{{ ai_gen_id }}">{{ block.settings.title }}</h2>
  
  <div class="ai-faq-list-{{ ai_gen_id }}">
    <div class="ai-faq-item-{{ ai_gen_id }}">
      <div class="ai-faq-question-{{ ai_gen_id }}" tabindex="0" role="button" aria-expanded="false" aria-controls="answer1-{{ ai_gen_id }}">
        <span>{{ block.settings.question_1 }}</span>
        <span class="ai-faq-icon-{{ ai_gen_id }}"></span>
      </div>
      <div id="answer1-{{ ai_gen_id }}" class="ai-faq-answer-{{ ai_gen_id }}">
        {{ block.settings.answer_1 }}
      </div>
    </div>
    
    <div class="ai-faq-item-{{ ai_gen_id }}">
      <div class="ai-faq-question-{{ ai_gen_id }}" tabindex="0" role="button" aria-expanded="false" aria-controls="answer2-{{ ai_gen_id }}">
        <span>{{ block.settings.question_2 }}</span>
        <span class="ai-faq-icon-{{ ai_gen_id }}"></span>
      </div>
      <div id="answer2-{{ ai_gen_id }}" class="ai-faq-answer-{{ ai_gen_id }}">
        {{ block.settings.answer_2 }}
      </div>
    </div>
    
    <div class="ai-faq-item-{{ ai_gen_id }}">
      <div class="ai-faq-question-{{ ai_gen_id }}" tabindex="0" role="button" aria-expanded="false" aria-controls="answer3-{{ ai_gen_id }}">
        <span>{{ block.settings.question_3 }}</span>
        <span class="ai-faq-icon-{{ ai_gen_id }}"></span>
      </div>
      <div id="answer3-{{ ai_gen_id }}" class="ai-faq-answer-{{ ai_gen_id }}">
        {{ block.settings.answer_3 }}
      </div>
    </div>
  </div>
  
  {% if block.settings.help_center_text != blank and block.settings.help_center_link != blank %}
    <div class="ai-faq-help-link-{{ ai_gen_id }}">
      <a href="{{ block.settings.help_center_link }}" target="_blank" rel="noopener">
        {{ block.settings.help_center_text }}
      </a>
    </div>
  {% endif %}
</div>

<script>
  (function() {
    class FaqAccordion extends HTMLElement {
      constructor() {
        super();
        this.faqItems = this.querySelectorAll('.ai-faq-item-{{ ai_gen_id }}');
        this.faqQuestions = this.querySelectorAll('.ai-faq-question-{{ ai_gen_id }}');
        this.setupEventListeners();
      }
      
      setupEventListeners() {
        this.faqQuestions.forEach((question, index) => {
          question.addEventListener('click', () => this.toggleAccordion(index));
          question.addEventListener('keydown', (event) => {
            if (event.key === 'Enter' || event.key === ' ') {
              event.preventDefault();
              this.toggleAccordion(index);
            }
          });
        });
      }
      
      toggleAccordion(index) {
        const faqItem = this.faqItems[index];
        const isActive = faqItem.classList.contains('active');
        const question = this.faqQuestions[index];
        
        // Close all items
        this.faqItems.forEach(item => {
          item.classList.remove('active');
        });
        
        this.faqQuestions.forEach(q => {
          q.setAttribute('aria-expanded', 'false');
        });
        
        // Open clicked item if it wasn't active
        if (!isActive) {
          faqItem.classList.add('active');
          question.setAttribute('aria-expanded', 'true');
        }
      }
    }
    
    customElements.define('faq-accordion-{{ ai_gen_id }}', FaqAccordion);
    // Initialize the component
    document.querySelector('.ai-faq-accordion-{{ ai_gen_id }}').outerHTML = 
      `<faq-accordion-{{ ai_gen_id }} class="ai-faq-accordion-{{ ai_gen_id }}" ${document.querySelector('.ai-faq-accordion-{{ ai_gen_id }}').getAttribute('{{ block.shopify_attributes }}') || ''}>
        ${document.querySelector('.ai-faq-accordion-{{ ai_gen_id }}').innerHTML}
      </faq-accordion-{{ ai_gen_id }}>`;
  })();
</script>

{% schema %}
{
  "name": "FAQ Accordion",
  "tag": null,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Frequently Asked Questions"
    },
    {
      "type": "header",
      "content": "FAQ1"
    },
    {
      "type": "text",
      "id": "question_1",
      "label": "Question 1",
      "default": "Who can use Tabby?"
    },
    {
      "type": "richtext",
      "id": "answer_1",
      "label": "Answer 1",
      "default": "<p>To be eligible to use Tabby, you must:</p><ul><li>Be at least 18 years of age</li><li>Be a UAE resident</li><li>Have a valid National ID</li><li>Link a valid debit or credit card to cover Tabby payments</li><li>Have a good credit history</li></ul>"
    },
    {
      "type": "header",
      "content": "FAQ 2"
    },
    {
      "type": "text",
      "id": "question_2",
      "label": "Question 2",
      "default": "How much can I spend with Tabby?"
    },
    {
      "type": "richtext",
      "id": "answer_2",
      "label": "Answer 2",
      "default": "<p>Your spending limit is determined by:</p><ul><li>Your payment history with Tabby</li><li>Your remaining balance and unpaid Tabby orders</li><li>The total purchase amount in your basket</li><li>Other internal approval factors</li></ul>"
    },
    {
      "type": "header",
      "content": "FAQ 3"
    },
    {
      "type": "text",
      "id": "question_3",
      "label": "Question 3",
      "default": "Is Tabby free to use?"
    },
    {
      "type": "richtext",
      "id": "answer_3",
      "label": "Answer 3",
      "default": "<p>Yes! When you split purchases into 4 payments, there are no fees or interest if payments are made on time. For longer-term plans, a service fee may apply.</p>"
    },
    {
      "type": "header",
      "content": "Help Center Link"
    },
    {
      "type": "text",
      "id": "help_center_text",
      "label": "Help Center Text",
      "default": "Visit Tabby's help center to find out more."
    },
    {
      "type": "url",
      "id": "help_center_link",
      "label": "Help Center URL"
    },
    {
      "type": "header",
      "content": "Styling"
    },
    {
      "type": "select",
      "id": "accordion_border_style",
      "label": "Accordion Border Style",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "thin_line",
          "label": "Thin Line"
        },
        {
          "value": "shadow",
          "label": "Shadow"
        }
      ],
      "default": "thin_line"
    },
    {
      "type": "select",
      "id": "accordion_icon",
      "label": "Accordion Icon",
      "options": [
        {
          "value": "plus_minus",
          "label": "Plus/Minus"
        },
        {
          "value": "caret",
          "label": "Caret"
        }
      ],
      "default": "plus_minus"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "min": 18,
      "max": 32,
      "step": 1,
      "unit": "px",
      "label": "Title Font Size",
      "default": 24
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section Padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section Padding Bottom",
      "default": 40
    },
    {
      "type": "select",
      "id": "link_alignment",
      "label": "Link Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "question_background_color",
      "label": "Question Background Color",
      "default": "#f7f7f7"
    },
    {
      "type": "color",
      "id": "question_text_color",
      "label": "Question Text Color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "answer_background_color",
      "label": "Answer Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "answer_text_color",
      "label": "Answer Text Color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "link_color",
      "label": "Help Center Link Color",
      "default": "#000f9f"
    }
  ],
  "presets": [
    {
      "name": "FAQ Accordion"
    }
  ]
}
{% endschema %}