<!-- In your Shopify theme, add this as a new section file: fabric-customizer.liquid -->

{% comment %}
✅ Section: Fabric Customizer with Swatch Management
- Add/Remove fabric swatches functionality
- Fully responsive design
- Color and image swatch support
{% endcomment %}

<section class="fabric-customizer-section" id="fabric-customizer-{{ section.id }}">
  <div class="container">
    <div class="header">
      <div class="step">{{ section.settings.heading_number }}</div>
      <h1 class="title">{{ section.settings.heading }}</h1>
      <p class="description">{{ section.settings.subheading_1 }}</p>
      <p class="description">{{ section.settings.subheading_2 }}</p>
    </div>
    
    <div class="customizer-container">
      <div class="customizer-header">
        <h2 class="customizer-title">Customize Your Fabric</h2>
        <button class="btn" id="addFabricBtn-{{ section.id }}">
          <span>+</span> Add New Fabric
        </button>
      </div>
      
      <div class="fabrics-grid">
        {% for block in section.blocks %}
          <div class="fabric-card" data-fabric-id="{{ block.id }}">
            <div class="fabric-card-image-container">
              {% if block.settings.main_image != blank %}
                <img src="{{ block.settings.main_image | img_url: '400x' }}" alt="{{ block.settings.title }}" class="fabric-card-image">
              {% else %}
                <div class="placeholder-image">No image</div>
              {% endif %}
              <button class="remove-fabric" data-fabric-id="{{ block.id }}">×</button>
            </div>
            <div class="fabric-card-content">
              <h3 class="fabric-card-name">{{ block.settings.title }}</h3>
              <div class="fabric-card-swatches">
                {% for i in (1..30) %}
                  {% assign color_key = 'color_swatch_' | append: i %}
                  {% assign image_key = 'color_image_' | append: i %}
                  {% assign swatch_color = block.settings[color_key] %}
                  {% assign swatch_image = block.settings[image_key] %}
                  
                  {% if swatch_color != blank or swatch_image != blank %}
                    <div class="fabric-card-swatch" style="{% if swatch_color != blank %}background-color: {{ swatch_color }};{% endif %}">
                      {% if swatch_image != blank %}
                        <img src="{{ swatch_image | img_url: '50x' }}" alt="Swatch {{ i }}" class="swatch-thumb">
                      {% endif %}
                    </div>
                  {% endif %}
                {% endfor %}
              </div>
              <button class="btn btn-outline edit-fabric-btn" data-fabric-id="{{ block.id }}">Edit Swatches</button>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
    
    <div class="footer">
      <h4 class="footer-title">{{ section.settings.footer_title }}</h4>
      <div class="footer-boxes">
        <div class="footer-box">
          <span>01</span>
          <p>{{ section.settings.list_item_1 }}</p>
        </div>
        <div class="footer-box">
          <span>02</span>
          <p>{{ section.settings.list_item_2 }}</p>
        </div>
        <div class="footer-box">
          <span>03</span>
          <p>{{ section.settings.list_item_3 }}</p>
        </div>
      </div>
      <p class="footer-note">{{ section.settings.footer_note }}</p>
    </div>
  </div>
  
  <!-- Add Fabric Modal -->
  <div class="modal" id="addFabricModal-{{ section.id }}">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">Add New Fabric</h3>
        <button class="close-modal">&times;</button>
      </div>
      <form id="addFabricForm-{{ section.id }}">
        <div class="form-group">
          <label class="form-label" for="fabricName-{{ section.id }}">Fabric Name</label>
          <input type="text" id="fabricName-{{ section.id }}" class="form-control" required>
        </div>
        <div class="form-group">
          <label class="form-label" for="fabricImage-{{ section.id }}">Fabric Image</label>
          <input type="file" id="fabricImage-{{ section.id }}" class="form-control" accept="image/*">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-outline close-modal">Cancel</button>
          <button type="submit" class="btn">Add Fabric</button>
        </div>
      </form>
    </div>
  </div>
  
  <!-- Edit Swatches Modal -->
  <div class="modal" id="editSwatchesModal-{{ section.id }}">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">Edit Swatches</h3>
        <button class="close-modal">&times;</button>
      </div>
      <div class="swatches-container" id="swatchesContainer-{{ section.id }}">
        <!-- Swatches will be dynamically added here -->
      </div>
      <div class="add-swatch-section">
        <h4 class="section-title">Add New Swatch</h4>
        <div class="swatch-options">
          <div class="form-group">
            <label class="form-label">Swatch Type</label>
            <div class="swatch-type-selector">
              <input type="radio" id="colorType-{{ section.id }}" name="swatchType-{{ section.id }}" value="color" checked>
              <label for="colorType-{{ section.id }}">Color</label>
              <input type="radio" id="imageType-{{ section.id }}" name="swatchType-{{ section.id }}" value="image">
              <label for="imageType-{{ section.id }}">Image</label>
            </div>
          </div>
          <div class="form-group" id="colorInput-{{ section.id }}">
            <label class="form-label" for="swatchColor-{{ section.id }}">Color</label>
            <input type="color" id="swatchColor-{{ section.id }}" class="form-control color-picker" value="#8B4513">
          </div>
          <div class="form-group" id="imageInput-{{ section.id }}" style="display: none;">
            <label class="form-label" for="swatchImage-{{ section.id }}">Image</label>
            <input type="file" id="swatchImage-{{ section.id }}" class="form-control" accept="image/*">
          </div>
          <button class="btn" id="addSwatchBtn-{{ section.id }}">Add Swatch</button>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline close-modal">Done</button>
      </div>
    </div>
  </div>
</section>

<style>
  .fabric-customizer-section {
    background: #EDEDED;
    padding: 60px 0;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  
  .header {
    text-align: center;
    margin-bottom: 40px;
  }
  
  .step {
    text-transform: uppercase;
    font-weight: 700;
    font-size: 35px;
    letter-spacing: 1px;
    margin-bottom: 10px;
  }
  
  .title {
    font-size: 28px;
    font-weight: 500;
    margin-bottom: 15px;
  }
  
  .description {
    font-size: 15px;
    color: #171717;
    margin-bottom: 5px;
  }
  
  .customizer-container {
    background: white;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.05);
    padding: 30px;
    margin-bottom: 40px;
  }
  
  .customizer-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 25px;
    padding-bottom: 15px;
    border-bottom: 1px solid #f5f5f5;
  }
  
  .customizer-title {
    font-size: 22px;
    font-weight: 600;
  }
  
  .btn {
    background: #000;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    gap: 8px;
  }
  
  .btn:hover {
    background: #333;
  }
  
  .btn-outline {
    background: transparent;
    border: 1px solid #ccc;
    color: #666;
  }
  
  .btn-outline:hover {
    border-color: #000;
    color: #000;
  }
  
  .fabrics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 25px;
  }
  
  .fabric-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
    position: relative;
  }
  
  .fabric-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .fabric-card-image-container {
    position: relative;
  }
  
  .fabric-card-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }
  
  .placeholder-image {
    width: 100%;
    height: 200px;
    background: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #999;
  }
  
  .remove-fabric {
    position: absolute;
    top: 10px;
    right: 10px;
    background: #ff4444;
    color: white;
    border: none;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    cursor: pointer;
    font-size: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: all 0.3s ease;
  }
  
  .fabric-card:hover .remove-fabric {
    opacity: 1;
  }
  
  .fabric-card-content {
    padding: 15px;
  }
  
  .fabric-card-name {
    font-size: 16px;
    font-weight: 600;
    margin-bottom: 10px;
  }
  
  .fabric-card-swatches {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    margin-bottom: 15px;
    max-height: 60px;
    overflow-y: auto;
  }
  
  .fabric-card-swatch {
    width: 25px;
    height: 25px;
    border-radius: 50%;
    border: 1px solid #ccc;
    overflow: hidden;
  }
  
  .swatch-thumb {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
    z-index: 1000;
    align-items: center;
    justify-content: center;
  }
  
  .modal.active {
    display: flex;
  }
  
  .modal-content {
    background: white;
    border-radius: 10px;
    width: 90%;
    max-width: 500px;
    max-height: 90vh;
    overflow-y: auto;
    padding: 30px;
    box-shadow: 0 5px 25px rgba(0,0,0,0.2);
  }
  
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding-bottom: 15px;
    border-bottom: 1px solid #f5f5f5;
  }
  
  .modal-title {
    font-size: 20px;
    font-weight: 600;
  }
  
  .close-modal {
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    color: #666;
  }
  
  .form-group {
    margin-bottom: 20px;
  }
  
  .form-label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
  }
  
  .form-control {
    width: 100%;
    padding: 10px 15px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 15px;
  }
  
  .color-picker {
    width: 60px;
    height: 40px;
    padding: 0;
    border: none;
    cursor: pointer;
  }
  
  .modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 25px;
  }
  
  .swatches-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    max-height: 200px;
    overflow-y: auto;
    padding: 10px;
    border: 1px solid #f5f5f5;
    border-radius: 5px;
    margin-bottom: 20px;
  }
  
  .swatch-item {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    position: relative;
    border: 2px solid transparent;
  }
  
  .swatch-item.active {
    border-color: #000;
  }
  
  .swatch-preview {
    width: 100%;
    height: 100%;
    border-radius: 50%;
  }
  
  .remove-swatch {
    position: absolute;
    top: -5px;
    right: -5px;
    background: #ff4444;
    color: white;
    border: none;
    border-radius: 50%;
    width: 18px;
    height: 18px;
    font-size: 12px;
    cursor: pointer;
    display: none;
    align-items: center;
    justify-content: center;
    line-height: 1;
  }
  
  .swatch-item:hover .remove-swatch {
    display: flex;
  }
  
  .add-swatch-section {
    border-top: 1px solid #f5f5f5;
    padding-top: 20px;
  }
  
  .section-title {
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 15px;
  }
  
  .swatch-type-selector {
    display: flex;
    gap: 15px;
  }
  
  .swatch-type-selector input[type="radio"] {
    margin-right: 5px;
  }
  
  .footer {
    text-align: center;
    margin-top: 60px;
  }
  
  .footer-title {
    font-size: 20px;
    font-weight: 600;
    margin-bottom: 30px;
  }
  
  .footer-boxes {
    display: flex;
    justify-content: center;
    gap: 20px;
    flex-wrap: wrap;
    margin-bottom: 25px;
  }
  
  .footer-box {
    border: 1px solid #565656;
    border-radius: 10px;
    padding: 20px 30px;
    width: 267px;
    text-align: center;
    transition: all 0.3s ease;
  }
  
  .footer-box:hover {
    border-color: #000;
    transform: translateY(-3px);
  }
  
  .footer-box span {
    display: block;
    font-size: 20px;
    font-weight: 700;
    margin-bottom: 6px;
  }
  
  .footer-box p {
    margin: 0;
    font-size: 15px;
  }
  
  .footer-note {
    font-size: 13px;
    color: #171717;
  }
  
  @media (max-width: 768px) {
    .fabrics-grid {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
    
    .customizer-header {
      flex-direction: column;
      gap: 15px;
      align-items: flex-start;
    }
    
    .footer-boxes {
      flex-direction: column;
      align-items: center;
    }
    
    .footer-box {
      width: 100%;
      max-width: 300px;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sectionId = "{{ section.id }}";
  
  // Modal elements
  const addFabricModal = document.getElementById(`addFabricModal-${sectionId}`);
  const editSwatchesModal = document.getElementById(`editSwatchesModal-${sectionId}`);
  const addFabricBtn = document.getElementById(`addFabricBtn-${sectionId}`);
  const closeModalBtns = document.querySelectorAll(`#fabric-customizer-${sectionId} .close-modal`);
  const addFabricForm = document.getElementById(`addFabricForm-${sectionId}`);
  const editFabricBtns = document.querySelectorAll(`#fabric-customizer-${sectionId} .edit-fabric-btn`);
  const removeFabricBtns = document.querySelectorAll(`#fabric-customizer-${sectionId} .remove-fabric`);
  const swatchTypeRadios = document.querySelectorAll(`input[name="swatchType-${sectionId}"]`);
  const colorInput = document.getElementById(`colorInput-${sectionId}`);
  const imageInput = document.getElementById(`imageInput-${sectionId}`);
  const addSwatchBtn = document.getElementById(`addSwatchBtn-${sectionId}`);
  const swatchesContainer = document.getElementById(`swatchesContainer-${sectionId}`);
  
  let currentEditingFabricId = null;
  
  // Open Add Fabric Modal
  addFabricBtn.addEventListener('click', function() {
    addFabricModal.classList.add('active');
  });
  
  // Close Modals
  closeModalBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      addFabricModal.classList.remove('active');
      editSwatchesModal.classList.remove('active');
    });
  });
  
  // Close modals when clicking outside
  window.addEventListener('click', function(event) {
    if (event.target === addFabricModal) {
      addFabricModal.classList.remove('active');
    }
    if (event.target === editSwatchesModal) {
      editSwatchesModal.classList.remove('active');
    }
  });
  
  // Handle swatch type selection
  swatchTypeRadios.forEach(radio => {
    radio.addEventListener('change', function() {
      if (this.value === 'color') {
        colorInput.style.display = 'block';
        imageInput.style.display = 'none';
      } else {
        colorInput.style.display = 'none';
        imageInput.style.display = 'block';
      }
    });
  });
  
  // Edit Fabric Swatches
  editFabricBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      currentEditingFabricId = this.getAttribute('data-fabric-id');
      loadSwatchesForFabric(currentEditingFabricId);
      editSwatchesModal.classList.add('active');
    });
  });
  
  // Remove Fabric
  removeFabricBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      const fabricId = this.getAttribute('data-fabric-id');
      if (confirm('Are you sure you want to remove this fabric?')) {
        const fabricCard = document.querySelector(`[data-fabric-id="${fabricId}"]`);
        fabricCard.style.opacity = '0';
        fabricCard.style.transform = 'scale(0.8)';
        setTimeout(() => {
          fabricCard.remove();
        }, 300);
      }
    });
  });
  
  // Add New Swatch
  addSwatchBtn.addEventListener('click', function() {
    const swatchType = document.querySelector(`input[name="swatchType-${sectionId}"]:checked`).value;
    
    if (swatchType === 'color') {
      const colorValue = document.getElementById(`swatchColor-${sectionId}`).value;
      addSwatchToContainer('color', colorValue);
    } else {
      const imageFile = document.getElementById(`swatchImage-${sectionId}`).files[0];
      if (imageFile) {
        const reader = new FileReader();
        reader.onload = function(e) {
          addSwatchToContainer('image', e.target.result);
        };
        reader.readAsDataURL(imageFile);
      } else {
        alert('Please select an image file');
      }
    }
  });
  
  // Function to load swatches for a fabric
  function loadSwatchesForFabric(fabricId) {
    swatchesContainer.innerHTML = '';
    
    // In a real implementation, this would fetch the swatches from Shopify
    // For now, we'll simulate with some placeholder swatches
    const fabricCard = document.querySelector(`[data-fabric-id="${fabricId}"]`);
    const swatches = fabricCard.querySelectorAll('.fabric-card-swatch');
    
    swatches.forEach((swatch, index) => {
      const isColor = !swatch.querySelector('img');
      const value = isColor ? swatch.style.backgroundColor : swatch.querySelector('img').src;
      
      addSwatchToContainer(isColor ? 'color' : 'image', value, true);
    });
  }
  
  // Function to add a swatch to the container
  function addSwatchToContainer(type, value, isExisting = false) {
    const swatchId = 'swatch-' + Date.now();
    const swatchItem = document.createElement('div');
    swatchItem.className = 'swatch-item';
    swatchItem.setAttribute('data-swatch-id', swatchId);
    
    if (type === 'color') {
      swatchItem.innerHTML = `
        <div class="swatch-preview" style="background-color: ${value}"></div>
        <button class="remove-swatch">×</button>
      `;
    } else {
      swatchItem.innerHTML = `
        <img src="${value}" alt="Swatch" class="swatch-preview">
        <button class="remove-swatch">×</button>
      `;
    }
    
    swatchesContainer.appendChild(swatchItem);
    
    // Add remove functionality
    const removeBtn = swatchItem.querySelector('.remove-swatch');
    removeBtn.addEventListener('click', function() {
      swatchItem.style.transform = 'scale(0)';
      swatchItem.style.opacity = '0';
      setTimeout(() => {
        swatchItem.remove();
      }, 300);
    });
    
    // Add click functionality to select swatch
    swatchItem.addEventListener('click', function(e) {
      if (e.target !== removeBtn) {
        document.querySelectorAll('#swatchesContainer-{{ section.id }} .swatch-item').forEach(item => {
          item.classList.remove('active');
        });
        this.classList.add('active');
      }
    });
    
    // If it's a new swatch, reset the form
    if (!isExisting) {
      if (type === 'color') {
        document.getElementById(`swatchColor-${sectionId}`).value = '#8B4513';
      } else {
        document.getElementById(`swatchImage-${sectionId}`).value = '';
      }
    }
  }
  
  // Add Fabric Form Submission
  addFabricForm.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const fabricName = document.getElementById(`fabricName-${sectionId}`).value;
    const fabricImage = document.getElementById(`fabricImage-${sectionId}`).files[0];
    
    // In a real implementation, this would send data to Shopify
    // For now, we'll just show an alert
    alert(`New fabric "${fabricName}" would be added to the system.`);
    
    // Reset form and close modal
    addFabricForm.reset();
    addFabricModal.classList.remove('active');
  });
});

// Note: In a real Shopify implementation, you would need to handle
// the actual addition/removal of fabrics and swatches through
// Shopify's AJAX API or form submissions
</script>

{% schema %}
{
  "name": "Fabric Customizer",
  "settings": [
    {
      "type": "text",
      "id": "heading_number",
      "label": "Step Number",
      "default": "STEP 5"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Main Heading",
      "default": "Pick Your Fabric & Colour"
    },
    {
      "type": "text",
      "id": "subheading_1",
      "label": "Subheading Line 1",
      "default": "Explore over 60 fabric types, each with more than 30 colours."
    },
    {
      "type": "text",
      "id": "subheading_2",
      "label": "Subheading Line 2",
      "default": "Our curated collection makes it easy to find the perfect texture and tone for your home."
    },
    {
      "type": "text",
      "id": "footer_title",
      "label": "Footer Title",
      "default": "Choose From Three Clear Price Categories"
    },
    {
      "type": "text",
      "id": "list_item_1",
      "label": "List Item 1",
      "default": "Honeypot Classics"
    },
    {
      "type": "text",
      "id": "list_item_2",
      "label": "List Item 2",
      "default": "Honeypot Signatures"
    },
    {
      "type": "text",
      "id": "list_item_3",
      "label": "List Item 3",
      "default": "Honeypot Performance"
    },
    {
      "type": "text",
      "id": "footer_note",
      "label": "Footer Note",
      "default": "All performance fabrics feature FibreGuard – stain-resistant, pet-friendly, and built to last!"
    }
  ],
  "blocks": [
    {
      "type": "fabric",
      "name": "Fabric",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Fabric Name",
          "default": "Cotton Canvas"
        },
        {
          "type": "image_picker",
          "id": "main_image",
          "label": "Main Fabric Image"
        },
        {
          "type": "header",
          "content": "Color Swatches"
        },
        {
          "type": "color",
          "id": "color_swatch_1",
          "label": "Swatch 1 Color",
          "default": "#8B4513"
        },
        {
          "type": "color",
          "id": "color_swatch_2",
          "label": "Swatch 2 Color",
          "default": "#228B22"
        },
        {
          "type": "color",
          "id": "color_swatch_3",
          "label": "Swatch 3 Color",
          "default": "#1E90FF"
        },
        {
          "type": "color",
          "id": "color_swatch_4",
          "label": "Swatch 4 Color",
          "default": "#FFD700"
        },
        {
          "type": "color",
          "id": "color_swatch_5",
          "label": "Swatch 5 Color",
          "default": "#DC143C"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Fabric Customizer",
      "category": "Custom"
    }
  ]
}
{% endschema %}